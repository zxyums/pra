import React from "react";
import "ag-grid-community/styles/ag-grid.css";
import "ag-grid-community/styles/ag-theme-alpine.css";
import "ag-grid-enterprise";
import { AgGridReact } from "ag-grid-react";

const App = () => {
  const rowData = [
    {
      attestationId: 'ATT456',
      status: 'Pending',
      createdBy: 'Admin',
      country: 'US',
      watchlist: 'PEP',
      isScanned: 'Yes',
      legalEntities: [
        {
          coverageCountry: 'US',
          systemName: 'System A',
          businessName: 'XYZ Corp',
          jurisdiction: 'US',
          processingCountry: 'US',
          settlementCountry: 'US',
          subAccounts: [
            { accountId: 'AC001', type: 'Corporate', status: 'Active' },
            { accountId: 'AC002', type: 'Retail', status: 'Inactive' }
          ]
        }
      ],
      languages: [
        {
          latin: 'English',
          nonLatin: 'None',
          level1: 'Retail',
          level2: 'Consumer',
          level3: 'Beverages'
        }
      ]
    }
  ];

  const parentColumns = [
    {
      headerName: '',
      checkboxSelection: true,
      headerCheckboxSelection: true,
      width: 40,
    },
    { headerName: 'Actions', cellRenderer: () => <span>Edit | History</span> },
    { field: 'attestationId', headerName: 'Attestation ID' },
    { field: 'status', headerName: 'Status' },
    { field: 'createdBy', headerName: 'Created By' },
    { field: 'country', headerName: 'Country' },
    { field: 'watchlist', headerName: 'Watchlist' },
    { field: 'isScanned', headerName: 'Is Scanned' }
  ];

  const legalEntityColumns = [
    {
      headerName: '',
      checkboxSelection: true,
      headerCheckboxSelection: true,
      width: 40,
    },
    { field: 'coverageCountry' },
    { field: 'systemName' },
    { field: 'businessName' },
    { field: 'jurisdiction' },
    { field: 'processingCountry' },
    { field: 'settlementCountry' }
  ];

  const subAccountColumns = [
    {
      headerName: '',
      checkboxSelection: true,
      headerCheckboxSelection: true,
      width: 40,
    },
    { field: 'accountId', headerName: 'Account ID' },
    { field: 'type', headerName: 'Type' },
    { field: 'status', headerName: 'Status' }
  ];

  const languageColumns = [
    { field: 'latin', headerName: 'Latin Languages' },
    { field: 'nonLatin', headerName: 'Non-Latin Languages' },
    { field: 'level1', headerName: 'Family Level 1' },
    { field: 'level2', headerName: 'Family Level 2' },
    { field: 'level3', headerName: 'Family Level 3' }
  ];

  const detailCellRenderer = (params) => {
    const { legalEntities, languages } = params.data;

    return (
      <div style={{ padding: 10 }}>
        {/* Legal Entities Grid with nested master-detail */}
        <div style={{ marginBottom: 20 }}>
          <h4>Legal Entities</h4>
          <div className="ag-theme-alpine" style={{ height: 200, width: "100%" }}>
            <AgGridReact
              rowData={legalEntities}
              columnDefs={legalEntityColumns}
              rowSelection="multiple"
              masterDetail={true}
              detailRowHeight={150}
              isRowMaster={(row) => row?.subAccounts?.length > 0}
              detailCellRendererParams={{
                detailGridOptions: {
                  columnDefs: subAccountColumns,
                  rowSelection: "multiple",
                  defaultColDef: { flex: 1 }
                },
                getDetailRowData: (params) => {
                  params.successCallback(params.data.subAccounts || []);
                }
              }}
              defaultColDef={{ flex: 1, resizable: true }}
            />
          </div>
        </div>

        {/* Languages Grid (Not expandable) */}
        <div>
          <h4>Languages and Family</h4>
          <div className="ag-theme-alpine" style={{ height: 150, width: "100%" }}>
            <AgGridReact
              rowData={languages}
              columnDefs={languageColumns}
              defaultColDef={{ flex: 1, resizable: true }}
            />
          </div>
        </div>
      </div>
    );
  };

  return (
    <div className="ag-theme-alpine" style={{ height: "100vh", width: "100%" }}>
      <AgGridReact
        rowData={rowData}
        columnDefs={parentColumns}
        rowSelection="multiple"
        masterDetail={true}
        detailRowHeight={450}
        isRowMaster={() => true}
        detailCellRendererFramework={detailCellRenderer}
        defaultColDef={{ flex: 1, resizable: true }}
      />
    </div>
  );
};

export default App;
