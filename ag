// File: NestedGrid.tsx
import React from 'react';
import { AgGridReact } from 'ag-grid-react';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import 'ag-grid-enterprise';

const NestedGrid = () => {
  const rowData = [
    {
      orderId: 'ORD001',
      date: '2025-04-15',
      customer: 'John Doe',
      ruleName: 'High Value Alert',
      requestId: 'REQ-001',
      children: [
        {
          productName: 'Laptop',
          attribute: 'Color',
          recordName: 'Laptop-Red',
          changeType: 'Update',
          priority: 'High',
        },
        {
          productName: 'Mouse',
          attribute: 'Size',
          recordName: 'Mouse-Medium',
          changeType: 'Add',
          priority: 'Low',
        },
      ],
    },
    {
      orderId: 'ORD002',
      date: '2025-04-16',
      customer: 'Jane Smith',
      ruleName: 'Low Risk Check',
      requestId: 'REQ-002',
      children: [
        {
          productName: 'Keyboard',
          attribute: 'Layout',
          recordName: 'Keyboard-QWERTY',
          changeType: 'Delete',
          priority: 'Medium',
        },
      ],
    },
  ];

  const parentColumns = [
    { field: 'orderId', headerName: 'Order Id' },
    { field: 'date', headerName: 'Date' },
    { field: 'customer', headerName: 'Customer' },
    { field: 'ruleName', headerName: 'Rule Name' },
    { field: 'requestId', headerName: 'Request Id' },
  ];

  const childColumns = [
    { field: 'productName', headerName: 'Product' },
    { field: 'attribute', headerName: 'Attribute' },
    { field: 'recordName', headerName: 'Record Name' },
    { field: 'changeType', headerName: 'Change Type' },
    { field: 'priority', headerName: 'Priority' },
  ];

  const detailCellRendererParams = {
    detailGridOptions: {
      columnDefs: childColumns,
      defaultColDef: { flex: 1, resizable: true },
    },
    getDetailRowData: (params: any) => {
      console.log('Getting detail rows for:', params.data);
      params.successCallback(params.data.children || []);
    },
  };

  return (
    <div className="ag-theme-alpine" style={{ height: '100vh', width: '100%' }}>
      <AgGridReact
        rowData={rowData}
        columnDefs={parentColumns}
        masterDetail={true}
        detailRowHeight={250}
        isRowMaster={(data) => data?.children?.length > 0}
        detailCellRendererParams={detailCellRendererParams}
        defaultColDef={{ flex: 1, resizable: true }}
      />
    </div>
  );
};

export default NestedGrid;