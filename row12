import React from 'react';
import { AgGridReact } from 'ag-grid-react';
import { ColDef, GridReadyEvent, IDetailCellRendererParams } from 'ag-grid-community';
import 'ag-grid-community/styles/ag-grid.css';
import 'ag-grid-community/styles/ag-theme-alpine.css';
import 'ag-grid-enterprise'; // Required for masterDetail

// ----------- Sample Data Type -----------
interface Attestation {
  attestationId: string;
  status: string;
  createdBy: string;
}

// ----------- Sample Data -----------
const rowData: Attestation[] = [
  { attestationId: 'ATT001', status: 'Active', createdBy: 'User1' },
  { attestationId: 'ATT002', status: 'Pending', createdBy: 'User2' },
];

// ----------- Column Definitions -----------
const columnDefs: ColDef[] = [
  { field: 'attestationId', headerName: 'Attestation ID' },
  { field: 'status', headerName: 'Status' },
  { field: 'createdBy', headerName: 'Created By' },
];

// ----------- Detail Renderer -----------
const DetailRenderer: React.FC<IDetailCellRendererParams<Attestation>> = ({ data }) => {
  console.log("DetailRenderer called for:", data?.attestationId);
  return (
    <div style={{ padding: 20, fontWeight: 'bold', color: 'green' }}>
      Details for {data?.attestationId}
    </div>
  );
};

// ----------- Main Component -----------
const GridExample2: React.FC = () => {
  const onGridReady = (params: GridReadyEvent) => {
    params.api.sizeColumnsToFit();
  };

  return (
    <div className="ag-theme-alpine" style={{ height: '100vh', width: '100%' }}>
      <AgGridReact<Attestation>
        rowData={rowData}
        columnDefs={columnDefs}
        masterDetail={true}                             // enable expand rows
        isRowMaster={() => true}                        // allow all rows to expand
        detailCellRenderer={DetailRenderer}             // show nested content
        detailRowHeight={150}
        onGridReady={onGridReady}
        defaultColDef={{ flex: 1 }}
      />
    </div>
  );
};

export default GridExample2;