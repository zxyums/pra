import React, { useState } from 'react';

const SqlConverter = () => {
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');
  const [loading, setLoading] = useState(false);

  const convertSql = () => {
    setLoading(true);
    setOutput('');

    const blocks = input.split(/COMMIT\s*;?/i).filter(Boolean);
    let finalOutput = '';

    for (let block of blocks) {
      const lines = block.trim().split('\n');
      let tableName = '';
      let columns = [];
      let values = [];

      for (let line of lines) {
        line = line.trim();
        if (!line) continue;

        // Extract table name
        if (line.toUpperCase().startsWith('UPDATE')) {
          const parts = line.split(/\s+/);
          tableName = parts[1];
          continue;
        }

        // Skip SET line
        if (line.toUpperCase() === 'SET') continue;

        // Handle WHERE line
        if (line.toUpperCase().startsWith('WHERE')) {
          const match = line.match(/WHERE\s+(\w+)\s*=\s*'?([^';]+)'?/i);
          if (match) {
            columns.push(match[1]);
            values.push(`'${match[2]}'`);
          }
          continue;
        }

        // Match key = value;
        const match = line.match(/^(\w+)\s*=\s*'?([^']*)'?,?$/);
        if (match) {
          columns.push(match[1]);
          const val = match[2].toUpperCase() === 'SYSDATE' ? 'SYSDATE' : `'${match[2]}'`;
          values.push(val);
        }
      }

      if (tableName && columns.length > 0) {
        const insert = `INSERT INTO ${tableName} (${columns.join(', ')})\nVALUES (${values.join(', ')});\nCOMMIT;`;
        finalOutput += insert + '\n\n';
      }
    }

    setOutput(finalOutput.trim());
    setLoading(false);
  };

  return (
    <div style={{ padding: '20px' }}>
      <h3>FINAL SQL Update â†’ Insert Converter (Working for your Format)</h3>
      <textarea
        rows={20}
        cols={100}
        placeholder="Paste UPDATE blocks ending with COMMIT;"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <br />
      <button onClick={convertSql} disabled={loading}>
        {loading ? 'Converting...' : 'Convert to INSERTs'}
      </button>
      <h4>Converted INSERT Statements:</h4>
      <textarea
        rows={25}
        cols={100}
        value={output}
        readOnly
      />
    </div>
  );
};

export default SqlConverter;