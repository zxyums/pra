
import React, { useState } from 'react';

const SqlConverter = () => {
  const [input, setInput] = useState('');
  const [output, setOutput] = useState('');

  const convertSql = () => {
    const blocks = input.split(/COMMIT\s*;?/i).filter(Boolean);
    let finalOutput = '';

    blocks.forEach((block) => {
      let tableName = '';
      let columns = [];
      let values = [];

      const lines = block.trim().split('\n');

      lines.forEach((rawLine) => {
        let line = rawLine.trim();
        if (!line) return;

        // 1. Detect table name
        if (line.toUpperCase().startsWith('UPDATE')) {
          const parts = line.split(/\s+/);
          tableName = parts[1];
          return;
        }

        // 2. Handle inline SET
        if (line.toUpperCase().startsWith('SET ')) {
          line = line.replace(/^SET\s+/i, '').trim();
        }

        // 3. Handle WHERE clause
        if (line.toUpperCase().startsWith('WHERE')) {
          const match = line.match(/WHERE\s+(\w+)\s*=\s*'?([^';]+)'?/i);
          if (match) {
            columns.push(match[1]);
            values.push(`'${match[2]}'`);
          }
          return;
        }

        // 4. Parse key=value
        const match = line.match(/^(\w+)\s*=\s*(SYSDATE|'[^']*'|\d+)\s*,?$/i);
        if (match) {
          columns.push(match[1]);
          const val = match[2];
          values.push(val.toUpperCase() === 'SYSDATE' ? 'SYSDATE' : val);
        }
      });

      // 5. Only create INSERT if valid
      if (tableName && columns.length && values.length && columns.length === values.length) {
        finalOutput += `INSERT INTO ${tableName} (${columns.join(', ')})\nVALUES (${values.join(', ')});\nCOMMIT;\n\n`;
      }

      // reset per block
      columns = [];
      values = [];
    });

    setOutput(finalOutput.trim());
  };

  return (
    <div style={{ padding: '20px' }}>
      <h3>Final SQL Update â†’ Insert Converter (Supports 9000+ Records)</h3>
      <textarea
        rows={20}
        cols={100}
        placeholder="Paste multiple UPDATE... COMMIT blocks here"
        value={input}
        onChange={(e) => setInput(e.target.value)}
      />
      <br />
      <button onClick={convertSql}>Convert to INSERTs</button>
      <h4>Converted INSERT Statements:</h4>
      <textarea
        rows={25}
        cols={100}
        value={output}
        readOnly
      />
    </div>
  );
};

export default SqlConverter;




